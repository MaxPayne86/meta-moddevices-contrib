diff --git a/browsepy/file.py b/browsepy/file.py
index 86cecc2..1b2593b 100644
--- a/browsepy/file.py
+++ b/browsepy/file.py
@@ -76,6 +76,7 @@ class Node(object):
         "aif", "aifc", "aiff", "flac", "w64", "wav",
     )
     midifile_exts = ("mid", "midi")
+    devicemodel_exts = ("json")
 
     @cached_property
     def is_excluded(self):
@@ -268,6 +269,11 @@ class Node(object):
             if extension == "sfz":
                 return "SFZ Instrument"
 
+        # Device Models
+        if parentdir in ("Model SIMs"):
+            if extension in self.devicemodel_exts:
+                return "Device Models"
+
         # If this is reached, a file is placed in a directory not fit for it
         # We can still return a recognizable type, but add "Unlisted" suffix
         if extension in self.audiofile_exts:
diff --git a/browsepy/templates/browse.html b/browsepy/templates/browse.html
index a64a53c..66cce11 100644
--- a/browsepy/templates/browse.html
+++ b/browsepy/templates/browse.html
@@ -152,12 +152,13 @@
     </tbody>
 </table>
 {% else %}
-{% set roordirgroups = ['Audio Files','MIDI Files','Impulse Response Files','Instruments'] %}
+{% set roordirgroups = ['Audio Files','MIDI Files','Impulse Response Files','Instruments', 'Device Models'] %}
 {% set rootdirs = {
     'Audio Files': ['Audio Loops','Audio Recordings','Audio Samples','Audio Tracks'],
     'MIDI Files': ['MIDI Clips','MIDI Songs'],
     'Impulse Response Files': ['Reverb IRs','Speaker Cabinets IRs'],
     'Instruments': ['Hydrogen Drumkits','SF2 Instruments','SFZ Instruments'],
+    'Device Models': ['Model SIMs'],
 } %}
 {% for roordirgroup in roordirgroups %}
 <table class="browser rootdirgroup">
