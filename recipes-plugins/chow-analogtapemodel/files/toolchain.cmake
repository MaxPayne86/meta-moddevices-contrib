# Aide juceaide in cross-platform building

set(HOST_DIR "$ENV{HOST_DIR}")

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DJUCE_USE_XCURSOR=0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DJUCE_USE_XINERAMA=0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DJUCE_USE_XRANDR=0")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DJUCE_USE_XSHM=0")

set(CMAKE_PROGRAM_PATH "${HOST_DIR}/usr/bin")
set(CMAKE_FIND_ROOT_PATH "${HOST_DIR}")
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(ENV{PKG_CONFIG_SYSROOT_DIR} "${HOST_DIR}")

# hopefully we do not need this again
#get_filename_component(HOST_DIR "$ENV{HOST_DIR}" REALPATH)
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I${HOST_DIR}/usr/include")
#set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -I${HOST_DIR}/usr/include/freetype2")
#set(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES "${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES} freetype")
#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -L${HOST_DIR}/usr/lib")
#set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,${HOST_DIR}/usr/lib")
