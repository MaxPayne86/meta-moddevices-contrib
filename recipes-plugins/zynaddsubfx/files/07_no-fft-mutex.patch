diff --git a/src/DSP/FFTwrapper.cpp b/src/DSP/FFTwrapper.cpp
index 062c09f..5e7edcc 100644
--- a/src/DSP/FFTwrapper.cpp
+++ b/src/DSP/FFTwrapper.cpp
@@ -17,21 +17,12 @@
 #include <pthread.h>
 #include "FFTwrapper.h"
 
-static pthread_mutex_t *mutex = NULL;
-
 FFTwrapper::FFTwrapper(int fftsize_)
 {
-    //first one will spawn the mutex (yeah this may be a race itself)
-    if(!mutex) {
-        mutex = new pthread_mutex_t;
-        pthread_mutex_init(mutex, NULL);
-    }
-
-
     fftsize  = fftsize_;
     time     = new fftw_real[fftsize];
     fft      = new fftw_complex[fftsize + 1];
-    pthread_mutex_lock(mutex);
+
     planfftw = fftw_plan_dft_r2c_1d(fftsize,
                                     time,
                                     fft,
@@ -40,15 +31,12 @@ FFTwrapper::FFTwrapper(int fftsize_)
                                         fft,
                                         time,
                                         FFTW_ESTIMATE);
-    pthread_mutex_unlock(mutex);
 }
 
 FFTwrapper::~FFTwrapper()
 {
-    pthread_mutex_lock(mutex);
     fftw_destroy_plan(planfftw);
     fftw_destroy_plan(planfftw_inv);
-    pthread_mutex_unlock(mutex);
 
     delete [] time;
     delete [] fft;
@@ -87,7 +75,4 @@ void FFTwrapper::freqs2smps(const fft_t *freqs, float *smps)
 void FFT_cleanup()
 {
     fftw_cleanup();
-    pthread_mutex_destroy(mutex);
-    delete mutex;
-    mutex = NULL;
 }
